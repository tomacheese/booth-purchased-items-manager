# GitHub Copilot Code Agent 用の開発環境セットアップワークフロー
# https://docs.github.com/ja/copilot/how-tos/agents/copilot-coding-agent/customizing-the-development-environment-for-copilot-coding-agent

name: Copilot Setup Steps

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  setup-development-environment:
    name: Setup Development Environment for Copilot
    runs-on: ubuntu-latest
    
    env:
      # Puppeteer configuration for CI environment
      PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'
      CHROMIUM_PATH: '/usr/bin/chromium-browser'
      IS_HEADLESS: 'true'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: 'package.json'
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Install system dependencies for Puppeteer
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            chromium-browser \
            fonts-noto-cjk \
            fonts-liberation \
            libasound2 \
            libatk-bridge2.0-0 \
            libdrm2 \
            libgtk-3-0 \
            libgtk-4-1 \
            libnspr4 \
            libnss3 \
            libx11-xcb1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            xdg-utils
            
      - name: Compile TypeScript
        run: pnpm run lint:tsc
        
      - name: Run linting
        run: pnpm run lint
        
      - name: Verify environment setup
        run: |
          echo "Node.js version: $(node --version)"
          echo "npm version: $(npm --version)"
          echo "pnpm version: $(pnpm --version)"
          echo "TypeScript version: $(npx tsc --version)"
          echo "Development environment setup complete!"